"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[848],{3316:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return r},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return u},default:function(){return b}});var n=a(7462),i=a(3366),o=(a(7294),a(3905)),l=["components"],r={title:"Initialization",slug:"/Usage/initialization"},s=void 0,d={unversionedId:"Usage/initialization",id:"Usage/initialization",isDocsHomePage:!1,title:"Initialization",description:"window.addEventListener('DOMContentLoaded', () => {",source:"@site/docs/Usage/initialization.md",sourceDirName:"Usage",slug:"/Usage/initialization",permalink:"/a11y-tabs/Usage/initialization",editUrl:"https://github.com/agnosticui/a11y-tabs/docs/edit/master/docs/Usage/initialization.md",tags:[],version:"current",frontMatter:{title:"Initialization",slug:"/Usage/initialization"},sidebar:"docs",previous:{title:"Introduction",permalink:"/a11y-tabs/"},next:{title:"Markup",permalink:"/a11y-tabs/Usage/markup"}},u=[{value:"DOM ready",id:"dom-ready",children:[],level:2},{value:"A11yTabs parameters",id:"a11ytabs-parameters",children:[],level:2}],p={toc:u};function b(t){var e=t.components,a=(0,i.Z)(t,l);return(0,o.kt)("wrapper",(0,n.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"window.addEventListener('DOMContentLoaded', () => {\nnew A11yTabs('.tab-list', '",'[role="tabpanel"]',"', 0)\n})"),(0,o.kt)("h2",{id:"dom-ready"},"DOM ready"),(0,o.kt)("p",null,"You should ensure you're DOM content has loaded before you attempt to instantiate ",(0,o.kt)("inlineCode",{parentName:"p"},"A11yTabs"),". This can\nbe done with ",(0,o.kt)("inlineCode",{parentName:"p"},"window.addEventListener('DOMContentLoaded, () => {})"),"."),(0,o.kt)("h2",{id:"a11ytabs-parameters"},"A11yTabs parameters"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"A11yTabs")," has three parameters in the following order:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"tabListSelector")," (string) is a CSS selector to pointing to your tablist. This element is the parent element of your tab buttons. It must have the attribute ",(0,o.kt)("inlineCode",{parentName:"li"},'[role="tablist"]'),", and the child tab buttons must in turn have the attribute ",(0,o.kt)("inlineCode",{parentName:"li"},'role="tab"'),". These tab buttons should also contain the ",(0,o.kt)("inlineCode",{parentName:"li"},"aria-controls")," attribute pointing to the ID of a corresponding tab-panel to be opened when that tab button is selected. For example:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<div role="tablist">\n  <button class="tab-item tab-button" role="tab" aria-controls="panel-1">Tab 1</button>\n  <button class="tab-item tab-button" role="tab" aria-controls="panel-2">Tab 2</button>\n...and so on\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"panelsSelector")," (string) is a CSS selector to your panel items and must allow ",(0,o.kt)("inlineCode",{parentName:"li"},"querySelectorAll"),' to find all panels with role="tabpanel" attribute. These are the items that correspond to your tab button\'s ',(0,o.kt)("inlineCode",{parentName:"li"},"aria-controls")," IDs earlier mentioned:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<div id="panel-1" role="tabpanel" tab-title="Tab 1">\n  <div>Tab 1 content.</div>\n</div>\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"activeIndex")," (number) optional index of the initial tab you'd like opened. Defaults to 0.")))}b.isMDXComponent=!0}}]);